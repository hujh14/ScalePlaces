layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "data_layer"
    layer: "DataLayer"
    param_str: "{\'model\': \'image\', \'batch_size\': 5 }"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 4
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 4
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 4
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 4
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 4
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "output"
  type: "Convolution"
  bottom: "conv5"
  top: "output"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "output"
  bottom: "label"
  top: "loss"
  loss_param {
    normalize: false
  }
}
